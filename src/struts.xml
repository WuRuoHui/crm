<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
        "http://struts.apache.org/dtds/struts-2.3.dtd">
<struts>
    <!-- 将action的创建交给spring容器 -->
    <constant name="struts.objectFactory" value="spring"/>
    <!-- spring负责装配action的依赖属性，默认是打开的 -->
    <!--    <constant name="struts.objectFactory.spring.autoWire" value="name"></constant>-->
    <package name="crm" namespace="/" extends="struts-default">
        <global-exception-mappings>
            <exception-mapping exception="java.lang.RuntimeException" result="error"></exception-mapping>
        </global-exception-mappings>
        <!-- 整合方案一：class属性仍然配置action的完整类名
                    struts2仍然创建action，由spring负责组装action中的依赖属性
         -->
<!--        <action name="UserAction_*" class="com.wu.action.UserAction" method="{1}">-->
<!--            <result name="success">/index.jsp</result>-->
<!--        </action>-->
        <!-- 整合方式二：class属性上填写spring中action填写的beanName
                    完全由spring管理action的生命周期，包括action的创建
                    注意：这样的话spring就不能自动组装依赖属性，需要手动组装
                          action的作用范围一定时多例的（scope属性）
        -->
        <action name="UserAction_*" class="userAction" method="{1}">
            <result name="success">/index.htm</result>
            <result name="error">/login.jsp</result>
        </action>
        <action name="CustomerAction_*" class="customerAction" method="{1}">
            <result name="list">/jsp/customer/list.jsp</result>
            <result name="toEdit">/jsp/customer/add.jsp</result>
            <result name="toList" type="redirectAction">
                <param name="namespace">/</param>
                <param name="actionName">CustomerAction_list</param>
            </result>
        </action>
        <action name="BaseDictAction_*" class="baseDictAction" method="{1}">
        </action>
    </package>
</struts>